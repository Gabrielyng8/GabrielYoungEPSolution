@model Domain.Models.Poll

@{
    ViewData["Title"] = "Details";
}

<div class="d-flex justify-content-between align-items-center mt-4 mb-3">
    <h2 class="mb-0">@Model.Title</h2>
    <small class="text-muted">Created on @Model.DateCreated.ToString("dd MMM yyyy")</small>
</div>

<div class="row mt-4">
    <div class="col-md-4">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5>Option 1</h5>
                <form asp-action="Vote" asp-route-pollId="@Model.Id" method="post" class="mb-0">
                    <input type="hidden" name="option" value="1" />
                    <button type="submit" class="btn btn-success btn-sm">Vote</button>
                </form>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-6">Text: </dt>
                    <dd class="col-sm-6">@Html.DisplayFor(model => model.Option1Text)</dd>

                    <dt class="col-sm-6">Count: </dt>
                    <dd class="col-sm-6">@Html.DisplayFor(model => model.Option1VotesCount)</dd>
                </dl>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5>Option 2</h5>
                <form asp-action="Vote" asp-route-pollId="@Model.Id" method="post" class="mb-0">
                    <input type="hidden" name="option" value="2" />
                    <button type="submit" class="btn btn-success btn-sm">Vote</button>
                </form>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-6">Text: </dt>
                    <dd class="col-sm-6">@Html.DisplayFor(model => model.Option2Text)</dd>

                    <dt class="col-sm-6">Count: </dt>
                    <dd class="col-sm-6">@Html.DisplayFor(model => model.Option2VotesCount)</dd>
                </dl>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5>Option 3</h5>
                <form asp-action="Vote" asp-route-pollId="@Model.Id" method="post" class="mb-0">
                    <input type="hidden" name="option" value="3" />
                    <button type="submit" class="btn btn-success btn-sm">Vote</button>
                </form>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-6">Text: </dt>
                    <dd class="col-sm-6">@Html.DisplayFor(model => model.Option3Text)</dd>

                    <dt class="col-sm-6">Count: </dt>
                    <dd class="col-sm-6">@Html.DisplayFor(model => model.Option3VotesCount)</dd>
                </dl>
            </div>
        </div>
    </div>
</div>

<div class="row mt-4">
    <div class="col-md-12">
        <canvas id="votesChart"></canvas>
    </div>
</div>

<div class="text-center mt-4">
    <a asp-action="Index" class="btn btn-primary">Back to List</a>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var ctx = document.getElementById('votesChart').getContext('2d');
        var votesChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Option 1', 'Option 2', 'Option 3'],
                datasets: [{
                    label: 'Votes',
                    data: [@Model.Option1VotesCount, @Model.Option2VotesCount, @Model.Option3VotesCount],
                    backgroundColor: [
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)'
                    ],
                    borderColor: [
                        'rgba(75, 192, 192, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                indexAxis: 'y',
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>

    @if (TempData["Alert"] != null)
    {
        <script>
            alert('@TempData["Alert"]');
        </script>
    }
}